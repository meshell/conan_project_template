dist: trusty
language: cpp

sudo: false

matrix:
  include:

    # Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &clang35
        apt:
          sources:
            - llvm-toolchain-precise-3.5
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.5
      env: COMPILER_CXX=clang++-3.5 COMPILER_CC=clang-3.5 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: clang
      addons: *clang35
      env: COMPILER_CXX=clang++-3.5 COMPILER_CC=clang-3.5 BUILD_TYPE='Debug' COVERAGE=0

     # Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc48
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env: COMPILER_CXX=g++-4.8 COMPILER_CC=gcc-4.8 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env: COMPILER_CXX=g++-4.8 COMPILER_CC=gcc-4.8 BUILD_TYPE='Debug' COVERAGE=1 GCOV_VER='gcov-4.8'

    - os: linux
      compiler: gcc
      addons: &gcc49
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER_CXX=g++-4.9 COMPILER_CC=gcc-4.9 BUILD_TYPE='Release' COVERAGE=0

    - os: linux
      compiler: gcc
      addons: *gcc49
      env: COMPILER_CXX=g++-4.9 COMPILER_CC=gcc-4.9 BUILD_TYPE='Debug' COVERAGE=0

    # - os: linux
    #   compiler: gcc
    #   addons: &gcc5
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-5
    #   env: COMPILER_CXX=g++-5 COMPILER_CC=gcc-5 CONAN_ENV_COMPILER_LIBCXX='libstdc++11' BUILD_TYPE='Release' COVERAGE=0
    #
    # - os: linux
    #   compiler: gcc
    #   addons: *gcc5
    #   env: COMPILER_CXX=g++-5 COMPILER_CC=gcc-5 CONAN_ENV_COMPILER_LIBCXX='libstdc++11' BUILD_TYPE='Debug' COVERAGE=0
    #
    # - os: linux
    #   compiler: gcc
    #   addons: &gcc6
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-6
    #   env: COMPILER_CXX=g++-6 COMPILER_CC=gcc-6 CONAN_ENV_COMPILER_LIBCXX='libstdc++11' BUILD_TYPE='Release' COVERAGE=0
    #
    # - os: linux
    #   compiler: gcc
    #   addons: *gcc6
    #   env: COMPILER_CXX=g++-6 COMPILER_CC=gcc-6 CONAN_ENV_COMPILER_LIBCXX='libstdc++11' BUILD_TYPE='Debug' COVERAGE=0

    # Mac OSX
    - os: osx
      osx_image: xcode8
      language: generic
      env: BUILD_TYPE='Debug' COVERAGE=0
    - os: osx
      osx_image: xcode7.3
      language: generic
      env: BUILD_TYPE='Debug' COVERAGE=0
    - os: osx
      osx_image: xcode7.1
      language: generic
      env: BUILD_TYPE='Debug' COVERAGE=0
    - os: osx
      osx_image: xcode6.4
      language: generic
      env: BUILD_TYPE='Debug' COVERAGE=0
    - os: osx
      osx_image: xcode6.2
      language: generic
      env: BUILD_TYPE='Debug' COVERAGE=0

notifications:
  email:
    recipients:
      - estermann.michel@gmail.com
    on_success: change
    on_failure: always

before_install:
  - |
    if [[ "$(uname -s)" != 'Darwin' ]]; then
      DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
      mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR} && mkdir cmake
      CMAKE_URL="http://www.cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz"
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi

install:
  - cd ${TRAVIS_BUILD_DIR}
  - "./.travis/install.sh"

before_script:
  - export CXX=${COMPILER_CXX}
  - export CC=${COMPILER_CC}

script:
  - cd ${TRAVIS_BUILD_DIR}
  - "./.travis/run.sh"

after_success:
  - if [ "${COVERAGE}" = '1' ] ; then coveralls -E.*/externals/.* -E/usr/include/.* -E.*/tests/.* -E.*/CMakeFiles/.* --gcov ${GCOV_VER} ; fi
